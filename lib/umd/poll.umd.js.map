{"version":3,"file":"poll.umd.js","sources":["../../src/utils.js","../../src/poll.js"],"sourcesContent":["export const isObject = (obj) => {\r\n    return typeof obj === 'object'\r\n}\r\n\r\nexport const isFunction = (fnc) => {\r\n    return typeof fnc === 'function'\r\n}\r\n\r\nexport const isNumber = (number) => {\r\n    return typeof number === 'number'\r\n}\r\n\r\nexport const isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch)\r\n}","import { isPromise, isObject, isNumber } from './utils'\r\nclass PollRequest {\r\n    constructor(config = {}) {\r\n        this.queue = new Map() //轮询队列\r\n        this.configs = new Map() //缓存轮询参数\r\n        if (!this.checkConfig(config)) return\r\n        this.default = Object.assign({\r\n            time: 5000,\r\n            number: null,//总共需要请求次数，默认无限\r\n            delay: 2,//错误情况时的延迟倍数\r\n        }, config, { arg: null })\r\n\r\n        this.key = 0\r\n        this.recKey = [] //key值回收\r\n    }\r\n\r\n    getKey() {\r\n        if (this.recKey.length) {\r\n            return this.recKey.shift()\r\n        }\r\n        return this.key++\r\n    }\r\n\r\n    checkConfig(config) {\r\n        if (isObject(config)) return true\r\n        throw new Error('config must is Object')\r\n        return false\r\n    }\r\n\r\n    push(req, config = {}) {\r\n        if (!this.checkConfig(config)) return\r\n        const key = this.getKey()\r\n        //相同key不在重复添加\r\n        if (this.queue.get(key)) return\r\n        //使用key作为唯一标识\r\n        this.queue.set(key, req)\r\n        this.configs.set(key, Object.assign({ currentNumber: 0 }, this.default, config))\r\n        this.pollStart(key)\r\n        return key\r\n    }\r\n\r\n    pollStart(key) {\r\n        this.requsetSend(key)\r\n    }\r\n\r\n    requsetSend(key) {\r\n        //数据不存在则结束轮询\r\n        const req = this.queue.get(key)\r\n        if (!req) return\r\n\r\n        //获取缓存的配置\r\n        const config = this.configs.get(key) || this.default\r\n\r\n        //检测是否超次\r\n        if (isNumber(config.number) && config.currentNumber >= config.number) {\r\n            return this.remove(key)\r\n        }\r\n\r\n        //直接调用并传参\r\n        const result = req(config.arg || null)\r\n        //记录调用次数\r\n        config.currentNumber += 1\r\n\r\n\r\n        //根据轮询函数的不同类型进行处理\r\n        if (isPromise(result)) {\r\n            result.then(() => {\r\n                this.sendAgain(key, config.time)\r\n            }).catch(() => {\r\n                {\r\n                    //出错时延长轮询时间，保证一定的体验\r\n                    this.sendAgain(key, config.time * config.delay)\r\n                }\r\n            })\r\n        } else {\r\n            this.sendAgain(key, config.time)\r\n        }\r\n    }\r\n\r\n    //轮询调用\r\n    sendAgain(key, time) {\r\n        setTimeout(() => {\r\n            this.requsetSend(key)\r\n        }, time)\r\n    }\r\n\r\n    //移除一个轮询\r\n    remove(key) {\r\n        const has = this.queue.get(key)\r\n        if (!has) return\r\n        this.queue.delete(key)\r\n        this.configs.delete(key)\r\n        this.recKey.push(key)\r\n    }\r\n\r\n    //重置整个轮询器\r\n    clear() {\r\n        this.queue.clear()\r\n        this.configs.clear()\r\n        this.recKey = []\r\n        this.key = 0\r\n    }\r\n\r\n    //当前获取轮询信息，已结束的信息将销毁\r\n    getPollInfo(key) {\r\n        return this.configs.get(key) || null\r\n    }\r\n}\r\n\r\n\r\n\r\nconst createPoll = (function () {\r\n    let tempPollRequest = null\r\n    return function (config = {}) {\r\n        if (tempPollRequest) return tempPollRequest\r\n        tempPollRequest = new PollRequest(config)\r\n        return tempPollRequest\r\n    }\r\n})()\r\n\r\n\r\nexport default createPoll"],"names":["const","this","let"],"mappings":"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"}